<?xml version="1.0" encoding="utf-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--status:当设置成trace时，你会看到log4j2内部各种详细输出    monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInternal="6000" packages="com.hsbc.springboot">
    <properties>
        <!-- 定义日志存储的路径 -->
        <property name="FILE_PATH">./logs</property>
        <property name="FILE_NAME">oauth2</property>
        <property name="PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] %logger{40}:%L - %m%n</property>
        <Property name="ELK_LOG_PATTERN">
            {"@timestamp":"%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ}","severity":"%level","com.digigd.market":"${FILE_NAME}","pid":"${sys:PID}","thread":"%t","class":"%logger{40}","line_number":"%L","stack_trace":"%exception{20}"}
        </Property>
    </properties>

    <appenders>
        <console name="CONSOLE" target="system_out">
            <PatternLayout pattern="${PATTERN}"/>
        </console>

        <!-- 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingFileInfo" immediateFlush="true" fileName="logs/${FILE_NAME}.info.log"
                     filePattern="${FILE_PATH}/${FILE_NAME}/$${date:yyyy-MM}/${FILE_NAME}-%d{yyyy-MM-dd}-%i.log.gz">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${PATTERN}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="50MB"/>
                <!--至少每天生成一个文件-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
        </RollingFile>

        <RollingFile name="RollingFileWarn" immediateFlush="true" fileName="logs/${FILE_NAME}.warn.log"
                     filePattern="logs/$${date:yyyy-MM}/${FILE_NAME}-%d{yyyy-MM-dd}-%i.log.gz">
            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${PATTERN}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="50MB"/>
                <!--至少每天生成一个文件-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>

        <!-- 这个会打印出所有的error及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileLogstash" immediateFlush="false" fileName="${FILE_PATH}/${FILE_NAME}/all.json"
                     filePattern="${FILE_PATH}/${FILE_NAME}/logstash/all.json-%d{yyyy-MM-dd}-%i.gz">
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <ElkJsonPatternLayout pattern="${ELK_LOG_PATTERN}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="100MB"/>
                <!--至少每天生成一个文件-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件 -->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>
    </appenders>
    <loggers>
        <!--过滤掉一些无用的DEBUG信息-->
        <!--        <logger name="org.springframework" level="INFO"/>-->
        <!--        <logger name="org.mybatis" level="INFO"/>-->
        <!--        <logger name="com.alibaba.nacos.client.naming" level="error"/>-->
        <!--        <logger name="org.springframework.cloud.gateway.handler.predicate.RoutePredicateFactory" level="trace"/>-->
        <root level="info" includeLocation="false">
            <appenderref ref="CONSOLE"/>
            <appenderref ref="RollingFileInfo"/>
            <appenderref ref="RollingFileError"/>
            <appenderref ref="RollingFileLogstash"/>
        </root>
    </loggers>
</configuration>